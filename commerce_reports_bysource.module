<?php

require __DIR__ . '/vendor/autoload.php';

use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_init()
 */
function commerce_reports_bysource_init(){

	$request = Request::createFromGlobals();

    $src_tmp = $request->query->get('src');
    if ( !empty($src_tmp) ){
            if ( !isset($_SESSION['commerce_reports_bysource']['src_code']) || empty($_SESSION['commerce_reports_bysource']['src_code']) ){
                    $_SESSION['commerce_reports_bysource']['src_code'] = $src_tmp;
            }
    } else {
    	//source: direct default or without source code in url
    	if ( !isset($_SESSION['commerce_reports_bysource']['src_code']) || empty($_SESSION['commerce_reports_bysource']['src_code']) ){
    		$_SESSION['commerce_reports_bysource']['src_code'] = 'Direct';
    	}
    }
    drupal_set_message("<pre>" . print_r($_SESSION['commerce_reports_bysource'], 1) . "</pre>");

}

/**
 * Action for rule commerce_reports_bysource_classify
 */
function commerce_reports_bysource_classify_order($order){

	//set values
	unset($term);
	if ( array_key_exists('commerce_reports_bysource', $_SESSION) && array_key_exists('src_code', $_SESSION['commerce_reports_bysource']) ) {
		
		$src_code = $_SESSION['commerce_reports_bysource']['src_code'];
	
		$vocabulary = 'commerce_reports_bysource';
		
		$tid = taxonomy_get_term_by_name($src_code, $vocabulary);

		//if not exists source create it
		if (empty($tid)){
			$tid = _create_source($vocabulary,$src_code);
		}

		//if not arte instance $order do it
		//if (!($order instanceof EntityMetadataWrapper)) {
	    	$order = entity_metadata_wrapper('commerce_order', $order);
	  	//}
	    	drupal_set_message("<pre>" . print_r((array)$order, 1) . "</pre>");
	  	//classify order by source and save
	  	$order->field_reports_bysource->set(intval($tid));
	  	commerce_order_save($order);

	  	drupal_set_message("<pre>" . print_r($order, 1) . "</pre>");

  	}

  	unset($_SESSION['commerce_reports_bysource']);

}

/**
 * Implements hook_views_api().
 */
function commerce_reports_bysource_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_reports_bysource') . '/views',
  );
}

/**
 * Auxiliary function for create taxonomy term of the commerce_reports_bysource
 */

function _create_source($vocabulary=NULL,$src=NULL){
	$tid = NULL;

	if ( !empty($vocabulary) || !empty($src) ){
		$vocabulary_names = taxonomy_vocabulary_get_names();
		$vid = $vocabulary_names[$vocabulary]->vid;
		$newsrc = (object) array(
			'name' => $src,
			'description' => 'Source: ' . $src,
			'vid' => $vid,
			);
		taxonomy_term_save($newsrc);
		$tid = taxonomy_get_term_by_name($src, $vocabulary)
	}

	return $tid;
}
